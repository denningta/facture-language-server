"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createFactureServices = exports.FactureModule = void 0;
const langium_1 = require("langium");
const module_1 = require("./generated/module");
const facture_validator_1 = require("./facture-validator");
const facture_scope_provider_1 = require("./facture-scope-provider");
const facture_token_builder_1 = require("./facture-token-builder");
/**
 * Dependency injection module that overrides Langium default services and contributes the
 * declared custom services. The Langium defaults can be partially specified to override only
 * selected services, while the custom services must be fully specified.
 */
exports.FactureModule = {
    validation: {
        ValidationRegistry: (services) => new facture_validator_1.FactureValidationRegistry(services),
        FactureValidator: () => new facture_validator_1.FactureValidator()
    },
    references: {
        ScopeProvider: (services) => new facture_scope_provider_1.FactureScopeProvider(services)
    },
    parser: {
        TokenBuilder: () => new facture_token_builder_1.FactureTokenBuilder()
    }
};
/**
 * Create the full set of services required by Langium.
 *
 * First inject the shared services by merging two modules:
 *  - Langium default shared services
 *  - Services generated by langium-cli
 *
 * Then inject the language-specific services by merging three modules:
 *  - Langium default language-specific services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 *
 * @param context Optional module context with the LSP connection
 * @returns An object wrapping the shared services and the language-specific services
 */
function createFactureServices(context) {
    const shared = (0, langium_1.inject)((0, langium_1.createDefaultSharedModule)(context), module_1.FactureGeneratedSharedModule);
    const Facture = (0, langium_1.inject)((0, langium_1.createDefaultModule)({ shared }), module_1.FactureGeneratedModule, exports.FactureModule);
    shared.ServiceRegistry.register(Facture);
    return { shared, Facture };
}
exports.createFactureServices = createFactureServices;
//# sourceMappingURL=facture-module.js.map